apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("config/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def emailConfigFile = rootProject.file("config/email.properties")
def emailProperties = new Properties()
emailProperties.load(new FileInputStream(emailConfigFile))

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.leo.stock"
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "SEND_ADDRESS", "\"${emailProperties['SEND_ADDRESS']}\""
        buildConfigField "String", "AUTH_CODE", "\"${emailProperties['AUTH_CODE']}\""

        setProperty("archivesBaseName", getString())
    }

    signingConfigs {
        releaseSign {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.releaseSign
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.releaseSign
        }
    }

    android.variantFilter { variant ->
        if (isDebug == 1 && variant.buildType.name.contains("release")) {
            variant.setIgnore(true);
        } else if (isDebug == 0 && variant.buildType.name.contains("debug")) {
            variant.setIgnore(true);
        }
    }

//    applicationVariants.all { variant ->
//        variant.outputs.all { output ->
//            def outputFile = output.outputFile
//            if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                outputFileName = "${project.name}_${variant.name}_${new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+8"))}.apk"
//            }
//        }
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.sun.mail:android-mail:1.6.2'
    implementation 'com.sun.mail:android-activation:1.6.2'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:okhttp:4.0.1'
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
}

String getString() {
    return "${project.name}-${new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+8"))}"
}
